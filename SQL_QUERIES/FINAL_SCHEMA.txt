CREATE TABLE LOCATIONS 
(
	 LOCATION_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
	 POSTAL_CODE VARCHAR2(100) NOT NULL,
	 CITY VARCHAR2(100) NOT NULL,
	 STREET_ADDRESS VARCHAR2(100) NOT NULL,
	 PRIMARY KEY(CITY)
);

CREATE TABLE RESTAURANTS
(
	 RESTAURANT_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
	 RESTAURANT_NAME VARCHAR2(100) NOT NULL UNIQUE,
	 RATING NUMBER(2,1) NOT NULL CHECK(RATING>=0 AND RATING <=5),
	 OPENS VARCHAR2(50) NOT NULL,
	 CLOSES VARCHAR2(50) NOT NULL,
	 CITY VARCHAR2(100) NOT NULL,
	 PRIMARY KEY(RESTAURANT_ID),
	 FOREIGN KEY(CITY) REFERENCES LOCATIONS(CITY)
	 ON DELETE CASCADE
);



CREATE TABLE MENU
(
	ITEM_NO NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
	ITEM_NAME VARCHAR2(100) NOT NULL,
	TYPE VARCHAR2(100),
	PRICE NUMBER(5,1) NOT NULL,
	DISCOUNT NUMBER (3,1) NOT NULL,
	COUNT_NUMBER NUMBER,
	RESTAURANT_ID NUMBER NOT NULL,
	PRIMARY KEY(ITEM_NO),
	FOREIGN KEY(RESTAURANT_ID) REFERENCES RESTAURANTS(RESTAURANT_ID)
	ON DELETE CASCADE
);

CREATE TABLE USERS
(
		USER_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
		USERNAME VARCHAR2(100) NOT NULL UNIQUE,
		FULLNAME VARCHAR2(100) NOT  NULL,
		EMAIL VARCHAR2(100) NOT NULL UNIQUE,
		PASSWORD VARCHAR2(100) NOT NULL,
		PHONE VARCHAR2(20) NOT NULL UNIQUE,
		CITY VARCHAR2(100) NOT NULL,
		PRIMARY KEY(USER_ID),
		FOREIGN KEY(CITY) REFERENCES LOCATIONS(CITY)
		ON DELETE CASCADE
);

CREATE TABLE DELIVER_MAN
(
	 DELIVER_MAN_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
	 DELIVER_MAN_NAME VARCHAR2(100) NOT NULL,
	 MOBILE VARCHAR2(20) NOT NULL UNIQUE,
	 CITY VARCHAR2(100) NOT NULL,
	 PASSWORD VARCHAR2(100) NOT NULL,
	 RATING NUMBER(2,1) NOT NULL CHECK(RATING>=0 AND RATING <=5),
	 DELIVERY_COUNT NUMBER NOT NULL,
	 PRIMARY KEY(DELIVER_MAN_ID),
	 FOREIGN KEY(CITY) REFERENCES LOCATIONS(CITY)
	 ON DELETE CASCADE
);

CREATE TABLE ORDERS
(
	 ORDER_ID NUMBER NOT NULL,
	 ORDER_PRICE NUMBER(5,1) NOT NULL,
	 REVIEW VARCHAR2(1000),
	 USER_ID NUMBER NOT NULL,
	 DELIVER_MAN_ID NUMBER,
	 RESTAURANT_ID NUMBER NOT NULL,
	 IS_DELIVERED NUMBER DEFAULT 0,
	 PRIMARY KEY(ORDER_ID),
	 FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
	 FOREIGN KEY(DELIVER_MAN_ID) REFERENCES DELIVER_MAN(DELIVER_MAN_ID),
	 FOREIGN KEY(RESTAURANT_ID) REFERENCES RESTAURANTS(RESTAURANT_ID)
	 ON DELETE CASCADE
);

CREATE TABLE ORDER_HISTORY
(
	ITEM_NO NUMBER NOT NULL,
	ORDER_ID NUMBER NOT NULL,
	COUNT NUMBER NOT NULL,
	PRIMARY KEY(ITEM_NO,ORDER_ID),
	FOREIGN KEY(ITEM_NO) REFERENCES MENU(ITEM_NO),
	FOREIGN KEY(ORDER_ID) REFERENCES ORDERS(ORDER_ID)
	ON DELETE CASCADE
	
);
	



CREATE TABLE ORDER_SERIAL
(
	ORDER_ID NUMBER NOT NULL,
	DELIVER_MAN_ID NUMBER NOT NULL,
	USER_ID NUMBER NOT NULL,
	PRIMARY KEY(ORDER_ID),
	FOREIGN KEY(ORDER_ID) REFERENCES ORDERS(ORDER_ID)
	ON DELETE CASCADE
);



CREATE TABLE PAYMENT
(
		ORDER_ID NUMBER NOT NULL,
		USER_ID NUMBER NOT NULL,
		DELIVER_MAN_ID NUMBER NOT NULL,
		TIME DATE DEFAULT CURRENT_TIMESTAMP(6),
		AMOUNT NUMBER(5,1) NOT NULL,
		PRIMARY KEY(ORDER_ID),
		FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
		FOREIGN KEY(DELIVER_MAN_ID) REFERENCES DELIVER_MAN(DELIVER_MAN_ID),
		FOREIGN KEY(ORDER_ID) REFERENCES ORDERS(ORDER_ID)
		ON DELETE CASCADE
);


CREATE SEQUENCE ORDER_ID_SEQ START WITH 1 INCREMENT BY 1;
